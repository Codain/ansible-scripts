- name: set postgresql_version = 9.1
  set_fact:
    postgresql_version: 9.1
    postgis_version: 1.5
    postgis_suffix:
  when: ansible_distribution_release == "wheezy"

- name: set postgresql_version = 9.4
  set_fact:
    postgresql_version: 9.4
    postgis_version: 2.1
    postgis_suffix: -2.1
  when: ansible_distribution_release == "jessie"

- name: install packages
  apt: pkg={{ item }}
  with_items:
    - python-matplotlib
    - postgresql-{{ postgresql_version }}
    - postgresql-{{ postgresql_version }}-postgis{{ postgis_suffix }}
    - postgresql-contrib-{{ postgresql_version }}

- name: ensure postgresql server is running
  service: name=postgresql state=started

- include: ../../../shared/project-account.yml user=polygons

- name: add sudoers to access polygons user
  copy: src=sudoers dest=/etc/sudoers.d/polygons mode=0440 owner=root group=root validate='visudo -cf %s'

- name: init database
  postgresql_db: name=polygons encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template='template0'
  register: createdb_polygons
  become: yes
  become_user: postgres

- name: init database user
  postgresql_user: name=polygons password=-polygons- db=polygons priv=ALL
  become: yes
  become_user: postgres

- name: psql extensions
  command: psql -d polygons -c "CREATE EXTENSION IF NOT EXISTS {{ item }}"
  register: psql_res
  changed_when: "not 'extension \"{{ item }}\" already exists' in '{{ psql_res.stderr }}'"
  become: yes
  become_user: postgres
  with_items:
    - hstore

- name: psql extension postgis
  command: psql -d polygons -c "CREATE EXTENSION IF NOT EXISTS {{ item }}"
  register: psql_res
  changed_when: "not 'extension \"{{ item }}\" already exists' in '{{ psql_res.stderr }}'"
  become: yes
  become_user: postgres
  with_items:
    - postgis
  when: postgresql_version == 9.4

- name: psql extension postgis
  command: psql -d polygons -f /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
  when: createdb_polygons.changed
  become: yes
  become_user: postgres
  when: postgresql_version == 9.1

- name: psql extension postgis - spatial_ref_sys
  command: psql -d polygons -f /usr/share/postgresql/{{ postgresql_version }}/contrib/postgis-{{ postgis_version }}/spatial_ref_sys.sql
  when: createdb_polygons.changed
  become: yes
  become_user: postgres

- name: psql access to tables
  postgresql_privs: database=polygons type=table objs={{ item }} roles=polygons privs=SELECT,INSERT,UPDATE,DELETE
  become: yes
  become_user: postgres
  with_items:
    - geometry_columns
    - spatial_ref_sys

- name: checkout git repository
  git: repo=https://github.com/jocelynj/osm-polygons-generation.git dest=/data/project/polygons/polygons-generation force=no update=no
  become: yes
  become_user: polygons

- name: psql init
  command: psql -d polygons -f /data/project/polygons/polygons-generation/init.sql
  become: yes
  become_user: polygons

- name: copy apache config
  copy: src=apache.site dest="/etc/apache2/sites-available/polygons.conf"
  notify: restart apache

- name: enable apache site
  file: src="/etc/apache2/sites-available/polygons.conf" dest="/etc/apache2/sites-enabled/polygons.conf" state=link
  notify: restart apache

- name: link state file
  file: src="diffs/planet/minute/state.txt" dest="/data/work/osmbin/replication/state.txt" state=link
  become: yes
  become_user: osmbin


