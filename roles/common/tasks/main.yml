- name: bootstrap python-apt package
  raw: apt-get -y install python-apt

#- apt: update_cache=yes
- name: install packages
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - python
    - python-apt

    - apache2
    - atop
    - bash-completion
    - denyhosts
    - etckeeper
    - git
    - htop
    - lftp
    - libdbd-pg-perl  # for postgresql's munin plugin
    - libwww-perl  # for apache's munin plugin
    - mc # Midnight Commander
    - monit
    - munin-node
    - screen
    - sudo
    - time
    - vim-nox

- name: install sensors package
  apt: pkg={{ item }}
  when: "not 'vm' in {{ group_names }}"
  with_items:
    - lm-sensors   # for sensors's munin plugin
  notify:
    - detect sensors

- name: init /data/ paths
  file: path={{ item }} state=directory owner=root group=root force=no
  with_items:
    - /data
    - /data/project
    - /data/work

- include: ../../../shared/account.yml user=cquest  uid=1202
- include: ../../../shared/account.yml user=jocelyn uid=1203
- include: ../../../shared/account.yml user=sly     uid=1209

- include: ../../../shared/account.yml user=cgiquello uid=1212
  when: "'cgiquello' in {{ group_names }}"

- include: ../../../shared/account.yml user=fred uid=1205
  when: "'fred' in {{ group_names }}"

- include: ../../../shared/account.yml user=jgcailton uid=1207
  when: "'jgcailton' in {{ group_names }}"

- include: ../../../shared/account.yml user=ybon uid=1223
  when: "'ybon' in {{ group_names }}"

- name: add default sudoers
  copy: src=sudoers dest=/etc/sudoers.d/ansible-common mode=0440 owner=root group=root validate='visudo -cf %s'

- name: add alias for ll
  lineinfile: dest=/etc/bash.bashrc regexp='alias ll="ls -l"' line='alias ll="ls -l"'

- name: Check if user backuppc exists
  action: shell /usr/bin/getent passwd backuppc
  register: user_exist
  ignore_errors: True
  changed_when: "user_exist.rc != 0"

- name: add user backuppc
  user: name=backuppc home=/home/backuppc system=yes
  when: user_exist.changed

- name: init group backuppc
  group: name=backuppc

- name: init backuppc ssh
  file: path=/home/backuppc/.ssh state=directory mode=0700 owner=backuppc group=backuppc

- name: add authorized_keys for user backuppc
  copy: src=backuppc.authorized_keys dest=/home/backuppc/.ssh/authorized_keys mode=0600 owner=backuppc group=backuppc force=yes

- name: update hosts.allow
  lineinfile: dest=/etc/hosts.allow regexp='^{{ item }}$' line='{{ item }}'
  with_items:
    - 'sshd: 127.0.0.1'
    - 'sshd: 78.238.28.132'      # Jocelyn
    - 'sshd: stmaur.cquest.org'  # Christian

- name: configure locales
  lineinfile: dest=/etc/locale.gen regexp="{{ item }}" line="{{ item }} "
  notify:
    - generate locales
  with_items:
    - en_GB.UTF-8 UTF-8
    - en_US.UTF-8 UTF-8
    - fr_FR.UTF-8 UTF-8
  when: "'{{ ansible_distribution }}' == 'Debian'"

- include: ssh-tunnel.yml user=ssh-tunnel uid=1104
  when: "'ssh-tunnel' in {{ group_names }}"

- include: munin-node.yml

- include: ntp.yml
  when: "not 'vm' in {{ group_names }}"
