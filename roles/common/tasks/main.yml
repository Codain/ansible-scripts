- name: create VM
  local_action:
    module: proxmox
    timeout: 60
    api_host: "{{ proxmox_var.host }}"
    api_user: "ansible@pve"
    cpus: "{{ proxmox_var.cpus }}"
    disk: "{{ proxmox_var.disk }}"
    hostname: "{{ inventory_hostname }}"
    netif: "{{ proxmox_var.netif }}"
    memory: "{{ proxmox_var.memory }}"
    node: "{{ vm_host.split('.')[0] }}"
    onboot: yes
    ostemplate: "local:vztmpl/{{ proxmox_var.ostemplate }}"
    password: "{{ lookup('password', 'credentials/proxmox/' + inventory_hostname) }}"
    state: present
    storage: "{{ proxmox_var.storage }}"
    swap: "{{ proxmox_var.swap }}"
    vmid: "{{ proxmox_var.vmid }}"
  when: proxmox_var is defined and vm_host is defined and lookup('env','PROXMOX_PASSWORD')
  become: no

- name: start VM
  local_action:
    module: proxmox
    api_host: "{{ proxmox_var.host }}"
    api_user: "ansible@pve"
    state: started
    vmid: "{{ proxmox_var.vmid }}"
  when: proxmox_var is defined and vm_host is defined and lookup('env','PROXMOX_PASSWORD')
  become: no


- name: apt-get update
  raw: "[ -e /usr/bin/apt-get ] && apt-get update"

- name: bootstrap python-apt package
  raw: "[ -e /usr/bin/apt-get ] && apt-get -y install python-apt"

- name: Gathering facts
  setup:

# disabling atopacct, as it breaks apt-get install atop
- name: Disable atopacct on Debian 9
  file:
    state: link
    src: "/dev/null"
    path: "/etc/systemd/system/atopacct.service"
  when: ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '9') or
         (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '17') or
         (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '18'))

- set_fact: install_apache=false
  when: install_apache is undefined

#- apt: update_cache=yes
- name: install packages
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - python
    - python-apt

    - acl
    - atop
    - bash-completion
    - ca-certificates
    - etckeeper
    - fail2ban
    - git
    - htop
    - lftp
    - libdbd-pg-perl  # for postgresql's munin plugin
    - locales
    - logrotate
    - mc # Midnight Commander
    - monit
    - munin-node
    - nano
    - screen
    - sudo
    - time
    - vim-nox
    - wget
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install packages
  apt: pkg={{ item }} update_cache=no
  with_items:
    - language-pack-en-base
  when: ansible_distribution == 'Ubuntu'

- name: install packages for apache2
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - apache2
    - libwww-perl  # for apache's munin plugin
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and install_apache

- name: remove packages
  apt: pkg={{ item }} state=absent
  with_items:
    - locate
    - mlocate
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install packages
  yum: name={{ item }}
  with_items:
    - python

    - atop
    - bash-completion
    - etckeeper
    - fail2ban
    - git
    - htop
    - lftp
    - mc # Midnight Commander
    - monit
    - munin-node
    - nano
    - screen
    - sudo
    - time
    - vim-enhanced
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'


- name: install sensors package
  apt: pkg={{ item }}
  with_items:
    - lm-sensors   # for sensors's munin plugin
  notify:
    - detect sensors
  when: not 'vm' in group_names and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: init /data/ paths
  file: path={{ item }} state=directory owner=root group=root force=no
  with_items:
    - /data
    - /data/project
    - /data/work

- include: ../../../shared/account.yml user=cquest  uid=1202
- include: ../../../shared/account.yml user=jocelyn uid=1203
- include: ../../../shared/account.yml user=marc_marc uid=1216
- include: ../../../shared/account.yml user=sly     uid=1209

- include: ../../../shared/account.yml user=apavie uid=1211
  when: "'apavie' in group_names"

- include: ../../../shared/account.yml user=cgiquello uid=1212
  when: "'cgiquello' in group_names"

- include: ../../../shared/account.yml user=don-vip uid=1247
  when: "'don-vip' in group_names"

- include: ../../../shared/account.yml user=driss uid=1224
  when: "'driss' in group_names"

- include: ../../../shared/account.yml user=etienne uid=1213
  when: "'etienne' in group_names"

- include: ../../../shared/account.yml user=eloks uid=1214
  when: "'eloks' in group_names"

- include: ../../../shared/account.yml user=fred uid=1205
  when: "'fred' in group_names"

- include: ../../../shared/account.yml user=guillaumeamat uid=1235
  when: "'guillaumeamat' in group_names"

- include: ../../../shared/account.yml user=hamlet uid=1305
  when: "'hamlet' in group_names"

- include: ../../../shared/account.yml user=jben uid=1206
  when: "'jben' in group_names"

- include: ../../../shared/account.yml user=jgcailton uid=1207
  when: "'jgcailton' in group_names"

- include: ../../../shared/account.yml user=juliep uid=1210
  when: "'juliep' in group_names"

- include: ../../../shared/account.yml user=lcombe uid=1215
  when: "'lcombe' in group_names"

- include: ../../../shared/account.yml user=nlehuby uid=1220
  when: "'nlehuby' in group_names"

- include: ../../../shared/account.yml user=panieravide uid=1230
  when: "'panieravide' in group_names"

- include: ../../../shared/account.yml user=redfox uid=1209
  when: "'redfox' in group_names"

- include: ../../../shared/account.yml user=rodolphe uid=1208
  when: "'rodolphe' in group_names"

- include: ../../../shared/account.yml user=thrrp uid=1310
  when: "'thrrp' in group_names"

- include: ../../../shared/account.yml user=tyndare uid=1212
  when: "'tyndare' in group_names"

- include: ../../../shared/account.yml user=vdct uid=1217
  when: "'vdct' in group_names"

- include: ../../../shared/account.yml user=ybon uid=1223
  when: "'ybon' in group_names"

- name: add default sudoers
  copy: src=sudoers dest=/etc/sudoers.d/ansible-common mode=0440 owner=root group=root validate='visudo -cf %s'

- name: add sudoers for users
  template: src=sudoers-users dest=/etc/sudoers.d/ansible-common-users mode=0440 owner=root group=root validate='visudo -cf %s'
  when: users_root is defined or group_users_root is defined


- name: add alias for ll
  lineinfile: dest=/etc/bash.bashrc regexp='alias ll="ls -l"' line='alias ll="ls -l"'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Check if user backuppc exists
  action: shell /usr/bin/getent passwd backuppc
  register: user_exist
  ignore_errors: True
  changed_when: "user_exist.rc != 0"

- name: add user backuppc
  user: name=backuppc home=/home/backuppc system=yes
  when: user_exist.changed

- name: init group backuppc
  group: name=backuppc

- name: init backuppc ssh
  file: path=/home/backuppc/.ssh state=directory mode=0700 owner=backuppc group=backuppc

- name: add authorized_keys for user backuppc
  copy: src=backuppc.authorized_keys dest=/home/backuppc/.ssh/authorized_keys mode=0600 owner=backuppc group=backuppc force=yes

- name: add ssh key to user backuppc
  authorized_key: user=backuppc key="{{ lookup('file',item) }}"
  with_fileglob:
    - "{{ lookup('env','PWD') }}/public_keys/backuppc-*"

- name: update hosts.allow
  lineinfile: dest=/etc/hosts.allow regexp='^{{ item }}$' line='{{ item }}'
  with_items:
    - 'sshd: 127.0.0.1'
    - 'sshd: 78.238.28.132'      # Jocelyn
    - 'sshd: stmaur.cquest.org'  # Christian
    - 'sshd: osm2.crans.org'     # backup
    - 'sshd: osm3.crans.org'     # backup
    - 'sshd: .openstreetmap.fr'  # other machines

- name: configure locales
  lineinfile: dest=/etc/locale.gen regexp="{{ item }}" line="{{ item }} "
  notify:
    - generate locales
  with_items:
    - en_GB.UTF-8 UTF-8
    - en_US.UTF-8 UTF-8
    - fr_FR.UTF-8 UTF-8
  when: ansible_distribution == 'Debian'


- name: create locales
  copy:
    content: ""
    dest: /var/lib/locales/supported.d/local
    force: no
    owner: root
  when: ansible_distribution == 'Ubuntu'

- name: configure locales
  lineinfile: dest=/var/lib/locales/supported.d/local regexp="{{ item }}" line="{{ item }} "
  notify:
    - generate locales
  with_items:
    - en_GB.UTF-8 UTF-8
    - en_US.UTF-8 UTF-8
    - fr_FR.UTF-8 UTF-8
  when: ansible_distribution == 'Ubuntu'

- include: ssh-tunnel.yml user=ssh-tunnel uid=1104
  when: "'ssh-tunnel' in group_names"

- name: set apache_default_ssl to default-ssl.conf
  set_fact: apache_default_ssl=default-ssl.conf

- include: apache2.yml
  when: install_apache

- include: monit.yml

- include: munin-node.yml

- include: ntp.yml
  when: "not 'vm' in group_names"
